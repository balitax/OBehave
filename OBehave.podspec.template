Pod::Spec.new do |s|

  s.name          = "OBehave"
  s.version       = "__VERSION__"
  s.summary       = "A collection of drag and drop view controller behaviors"
  s.homepage      = "https://github.com/warren-gavin/OBehave"
  s.license       = { :type => "MIT", :file => "LICENSE" }
  s.author        = { "Apokrupto" => "warren@apokrupto.com" }
  s.platform      = :ios, "10.0"
  s.source        = { :git => "https://github.com/warren-gavin/OBehave.git", :tag => s.version }
  s.source_files  = "#{s.name}/**/*.swift"
  s.description   = <<-DESC
  A behavior is a unit of code that does a single job that may be reused in multiple areas of a project or projects.

  Using composition, view controllers are given ownership of a behavior in Interface Builder (or the storyboard).
  Composition is favoured over inheriting functionality from a base view controller for the following reasons:

    1.  Behaviors can be re-used across multiple projects
    1.  A base view controller with lots of code that may be used by some
        but not all subclassed view controllers is poor design.
    1.  Using behaviors provides true separation of concerns.
    1.  View controllers are reduced in size

  See http://www.objc.io/issue-13/behaviors.html for details.
  DESC

  # Subspecs
__SUBSPECS__
end
