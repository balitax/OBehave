#!/bin/sh

## Create a new podspec
##
## You must create a release branch, given the name of the release version_number
## e.g. 'release/1.2.3' will result in a podspec with version '1.2.3'

IFS='%'
PROJECT=OBehave
PODSPEC=$PROJECT.podspec
SRC_ROOT=$PROJECT/Classes

generated_subspec=""

## Generate a subspec output
## $1 - Directory in which to look for subdirectories
## $2 - Spec name, initially this is the standard 's', in subspecs it is the directory name
## $3 - Indentation.
## $4 - Separator between subspecs, like a newline (optional)
function create_subspec() {
  for file in "$1"/*; do
    # Only make subspecs from directories
    if [ -d "$file" ] ; then
      generated_subspec+="$4"
      dir=`dirname $file`
      base=`basename $file`
      srcpath=`dirname $SRC_ROOT/${dir#./}/${base#./}/.`
      subspec=`echo "$base" | tr '[:upper:]' '[:lower:]'`

      generated_subspec+="$3$2.subspec '$base' do |$subspec|\n"

      # Only add source_files if the directory contains files
      if [ ! -z `ls -p $file | grep -v /` ]; then
        generated_subspec+="$3  $subspec.source_files = '${srcpath/.\//}'\n"
      fi

      # Recurse to make child subspecs
      create_subspec $file $subspec "  $3"
      generated_subspec+="$3end\n"
    fi
  done
}

cd $SRC_ROOT
create_subspec . "s" "  " "\n"

cd - > /dev/null

TEMPLATE=`cat $PODSPEC.template`
TEMPLATE=${TEMPLATE/__VERSION__/`git branch | grep \* | cut -d ' ' -f2 | xargs basename`}
TEMPLATE=${TEMPLATE/__SUBSPECS__/$generated_subspec}

echo $TEMPLATE > $PODSPEC
